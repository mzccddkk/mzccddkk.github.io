<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Mzccddkk</title>
		<link>https://mzccddkk.github.io/</link>
		<description>Recent content on mzccddkk.github.io</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>© Copyright Mzccddkk | Vitae theme for Hugo</copyright>
		<lastBuildDate>Wed, 23 Mar 2022 14:53:38 +0800</lastBuildDate>
		
		<atom:link href="https://mzccddkk.github.io/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>一种付款码数字生成方法</title>
			<link>https://mzccddkk.github.io/post/a-kind-of-digital-generation-method-of-payment-code/</link>
			<pubDate>Wed, 23 Mar 2022 14:53:38 +0800</pubDate>
			
			<guid>https://mzccddkk.github.io/post/a-kind-of-digital-generation-method-of-payment-code/</guid>
			<description>
				
				一种付款码数字的设计与实现
				
			</description>
		</item>
		<item>
			<title>MySQL Multi-Range Read（MRR）优化</title>
			<link>https://mzccddkk.github.io/post/mysql-multi-range-read-optimization/</link>
			<pubDate>Wed, 22 Sep 2021 18:54:51 +0800</pubDate>
			
			<guid>https://mzccddkk.github.io/post/mysql-multi-range-read-optimization/</guid>
			<description>
				
				MySQL Multi-Range Read（MRR）Optimization
				
			</description>
		</item>
		<item>
			<title>Socket 粘包解决方案</title>
			<link>https://mzccddkk.github.io/post/socket-sticky-package-solution/</link>
			<pubDate>Tue, 07 Sep 2021 17:26:37 +0800</pubDate>
			
			<guid>https://mzccddkk.github.io/post/socket-sticky-package-solution/</guid>
			<description>
				
				Socket 粘包问题探索
				
			</description>
		</item>
		<item>
			<title>使用 Docker 部署 ELK 集群，以及 Filebeat 的简单使用</title>
			<link>https://mzccddkk.github.io/post/use-docker-to-deploy-a-elk-cluster-and-simple-usage-of-filebeat/</link>
			<pubDate>Tue, 13 Apr 2021 10:45:15 +0800</pubDate>
			
			<guid>https://mzccddkk.github.io/post/use-docker-to-deploy-a-elk-cluster-and-simple-usage-of-filebeat/</guid>
			<description>
				
				本文介绍使用 Docker 部署 ELK 集群，以及 Filebeat 的简单使用
				
			</description>
		</item>
		<item>
			<title>Redis 数据持久化机制 AOF 日志与 RDB快照</title>
			<link>https://mzccddkk.github.io/post/redis-data-persistence-mechanism-aof-and-rdb/</link>
			<pubDate>Sun, 06 Dec 2020 13:51:36 +0800</pubDate>
			
			<guid>https://mzccddkk.github.io/post/redis-data-persistence-mechanism-aof-and-rdb/</guid>
			<description>
				
				支撑起 Redis 高性能的一个重要原因就是 Redis 中的数据是基于内存操作的。既然如此，一旦我们的服务器宕机，那么内存中的数据将全部丢失。这显然是不能接受的，本文就简单的介绍一下 Redis 的数据持久化机制 AOF 日志和 RDB 快照
				
			</description>
		</item>
		
	</channel>
</rss>
